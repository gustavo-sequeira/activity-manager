unit Tarefa.Model;

interface

uses
  FireDAC.Comp.Client;

type
  TTarefa = class
  private
    FCODIGO: Integer;
    FCODIGO_USUARIO: Integer;
    FDESCRICAO: string;
  public
    property CODIGO: Integer read FCODIGO write FCODIGO;
    property CODIGO_USUARIO: Integer read FCODIGO_USUARIO write FCODIGO_USUARIO;
    property DESCRICAO: string read FDESCRICAO write FDESCRICAO;

    constructor Create;
    destructor Destroy; override;

    function Listar(order_by: string; out erro: string): TFDQuery;
    function Incluir(out erro: string): Boolean;
    function Excluir(out erro: string): Boolean;
    function Editar(out erro: string): Boolean;
  end;

implementation

uses
  Config.Database;

{ TTarefa }

constructor TTarefa.Create;
begin
  config.database.Connect;
end;

destructor TTarefa.Destroy;
begin
  config.database.Disconect;
end;

function TTarefa.Editar(out erro: string): Boolean;
begin

end;

function TTarefa.Excluir(out erro: string): Boolean;
var
    qry : TFDQuery;
begin
    try
        qry := TFDQuery.Create(nil);
        qry.Connection := Model.Connection.FConnection;

        with qry do
        begin
            Active := false;
            sql.Clear;
            SQL.Add('DELETE FROM TAB_CLIENTE WHERE ID_CLIENTE=:ID_CLIENTE');
            ParamByName('ID_CLIENTE').Value := ID_CLIENTE;
            ExecSQL;
        end;

        qry.Free;
        erro := '';
        result := true;

    except on ex:exception do
        begin
            erro := 'Erro ao excluir cliente: ' + ex.Message;
            Result := false;
        end;
    end;
end;

function TTarefa.Incluir(out erro: string): Boolean;
begin

end;

function TTarefa.Listar(order_by: string; out erro: string): TFDQuery;
begin

end;

end.

